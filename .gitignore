########################################
###########      READ      #############
########################################

# OSX leaves these everywhere on SMB shares
._*

# OSX trash
.DS_Store

# Developers can store local stuff in dirs named __something
__*

# Eclipse files
.classpath
.project
.settings/**

# Files generated by JetBrains IDEs, e.g. IntelliJ IDEA
.idea/
*.iml

# Vscode files
.vscode

# This is where the result of the go build goes
/output*/
/_output*/
/_output

# Emacs save files
*~
\#*\#
.\#*

# Vim-related files
[._]*.s[a-w][a-z]
[._]s[a-w][a-z]
*.un~
Session.vim
.netrwhist

# cscope-related files
# Dev took for browsing source code, contains a terminal interface for.
# Finding symbols, globa defintiions, text string, grep, assignments, functions, etc
# Basically code look up
cscope.*

# Go test binaries
*.test
/hack/.test-cmd-auth

# JUnit test output from ginkgo e2e tests
# Ginko: GO testing framework for expressive tests, paired with the Gomega matcher library.
# Ginkgo is close to a BDD framework, but is intended to be general purpose. (unit, intergation, acceptn ,performance)
# Syntax seems very similar to JEST and RTL, with BeforEeach, Describe ,It, 
# But also Context for management.
# Interesting highlight is ginkgo watch to rerun tests.

# What is a matcher library?
# support for specifying test expectations, such as for unit tests. 
/junit*.xml

# Mercurial files
**/.hg
**/.hg*

# Tool for building and distributing development environments. 
# Vagrant
# Looking online it seems like there's a variety of use cases for this. https://www.reddit.com/r/devops/comments/p0icih/does_anyone_use_hashicorp_vagrant_anymore/
# Replicating a customer environment. Provides virtualization when docker seems to provide containerization.
# IF VMs are still being used in production it seems to be used for testing Ansible. Traditionally legacy code it seems now.

# Ansible is a infra as code, open souirce, provisioning, config, application deployment.  Used to maintain configurations on a set of machines.
# IT seems like a dedicated configuration management tool within the OS.
# There just seems to be a lot of alternatives in the devops space. https://www.reddit.com/r/devops/comments/17ayinx/more_modern_alternative_to_ansible/
# TODO: How does this repo specifically use vagrant and similar tooling.

.vagrant
network_closure.sh

# Not 100% what this but it's probably some configuration for vagrant or similar.

# Local cluster env variables
/cluster/env.sh

# Compiled binaries in third_party
/third_party/pkg

# Also ignore etcd installed by hack/install-etcd.sh
/third_party/etcd*
/default.etcd

# Also ignore protoc installed by hack/install-protoc.sh
/third_party/protoc*

# User cluster configs
.kubeconfig

.tags*

# Version file for dockerized build
.dockerized-kube-version-defs

# Web UI
/www/master/node_modules/
/www/master/npm-debug.log
/www/master/shared/config/development.json

# JS test runner made by the same people who made Angular supposedly / maybe it's built into angular and still used today.
# Used to be testacular 
# Karma output
/www/test_out


# precommit temporary directories created by ./hack/verify-generated-docs.sh and ./hack/lib/util.sh
/_tmp/
/doc_tmp/


# Test artifacts are sets of documents which the project tester gets during the STLC. By products or generate dor created while
# performing software testing. 

# Types of test artifacts incllude test strategy, plan, scenario, traceability matrix, software test report.
# So basically it's automatically created documentation for reporting purposes.
# Selenium and other testing tools, and some CI/CD platforms include the ab ility oto automate generating test reports.
# Often for internal use within testing team and other st akeholders. 
# Test artifacts produced by Prow/kubetest2 jobs
/_artifacts/
/_rundir/

# Go dependencies installed on Jenkins
/_gopath/

# Config directories created by gcloud and gsutil on Jenkins
/.config/gcloud*/
/.gsutil/

# Linux distro, open source, discontinued.
# CoreOS stuff
/cluster/libvirt-coreos/coreos_*.img

# Downloaded Kubernetes binary release
/kubernetes/

# direnv .envrc files
.envrc

# Downloaded kubernetes binary release tar ball
kubernetes.tar.gz

# Phony test files used as part of coverage generation
zz_generated_*_test.go

# Just in time generated data in the source, should never be committed
/test/e2e/generated/bindata.go

# This file used by some vendor repos (e.g. github.com/go-openapi/...) to store secret variables and should not be ignored
!\.drone\.sec

/bazel-*
*.pyc

# Assume validators fro any third party
# generated by verify-vendor.sh
vendordiff.patch
